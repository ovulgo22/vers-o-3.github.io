/* ==========================================================================
   1. TRANSIÇÕES GLOBAIS
   ========================================================================== */

/*
  Aplicamos uma transição padrão para propriedades comuns em elementos interativos.
  Isso garante que qualquer mudança de estado (hover, active, focus) seja suave.
*/
a,
button,
.skill-card,
.project-card,
.article-link,
.contact-link-item,
#devto-articles-container .article-card {
    transition: 
        transform var(--transition-speed) ease-in-out,
        background-color var(--transition-speed) ease-in-out,
        border-color var(--transition-speed) ease-in-out,
        color var(--transition-speed) ease-in-out,
        box-shadow var(--transition-speed) ease-in-out;
}


/* ==========================================================================
   2. EFEITOS DE HOVER E FOCUS (FEEDBACK VISUAL)
   ========================================================================== */

/* Efeito de "lift" (levantamento) para cards e botões */
.icon-button:hover,
.skill-card:hover,
.project-card:hover,
.article-link:hover,
.contact-link-item:hover,
#devto-articles-container .article-card:hover {
    transform: translateY(-4px);
    border-color: var(--color-accent);
}

/* Os cards de projeto e artigo terão uma sombra sutil para maior destaque */
.project-card:hover,
#devto-articles-container .article-card:hover {
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
}

/* Acessibilidade: Melhora o anel de foco padrão para ser mais visível e elegante */
a:focus-visible,
button:focus-visible {
    outline: 2px solid var(--color-accent);
    outline-offset: 4px;
    border-radius: var(--border-radius);
}


/* ==========================================================================
   3. ANIMAÇÕES DE ENTRADA (ON-SCROLL)
   ========================================================================== */

/*
  Definimos a animação 'fadeInUp'.
  Os elementos começarão transparentes e ligeiramente abaixo de sua posição final.
*/
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/*
  Esta classe será aplicada via JavaScript aos elementos quando eles
  entrarem na área visível da tela (viewport).
  Inicialmente, os elementos estão invisíveis.
*/
.content-section {
    opacity: 0;
}

/*
  Quando a classe .is-visible for adicionada, a animação é executada.
  'animation-fill-mode: forwards' garante que o elemento permaneça no estado final
  da animação (opacidade 1 e posição y 0).
*/
.content-section.is-visible {
    animation: fadeInUp 0.6s ease-out forwards;
}


/* ==========================================================================
   4. MICRO-INTERAÇÕES
   ========================================================================== */

/*
  Animação de rotação para o ícone do tema.
  Será ativada via JavaScript adicionando uma classe.
*/
@keyframes rotateIcon {
    from {
        transform: rotate(-360deg);
    }
    to {
        transform: rotate(0deg);
    }
}

.theme-icon-spin {
    animation: rotateIcon 0.4s ease-in-out;
}
